{"version":3,"file":"commands.js","mappings":";;;;;;;;;AAAA;;AAEA;;;;;AAKA;AAEAA,MAAM,CAACC,OAAP,CAAe,aACb;AACD,CAFD;AAIA;;;;;AAIA,SAASC,MAAT,CAAgBC,KAAhB,EAAiD;EAC/C,IAAMC,OAAO,GAAsC;IACjDC,IAAI,EAAEL,MAAM,CAACM,YAAP,CAAoBC,2BAApB,CAAgDC,oBADL;IAEjDJ,OAAO,EAAE,mBAFwC;IAGjDK,IAAI,EAAE,YAH2C;IAIjDC,UAAU,EAAE;EAJqC,CAAnD,CAD+C,CAQ/C;;EACAV,MAAM,CAACW,OAAP,CAAeC,OAAf,CAAuBC,IAAvB,CAA4BC,oBAA5B,CAAiDC,YAAjD,CAA8D,QAA9D,EAAwEX,OAAxE,EAT+C,CAW/C;;EACAD,KAAK,CAACa,SAAN;AACD;;AAED,SAASC,SAAT,GAAkB;EAChB,OAAO,OAAOC,IAAP,KAAgB,WAAhB,GACHA,IADG,GAEH,OAAOC,MAAP,KAAkB,WAAlB,GACEA,MADF,GAEE,OAAOC,qBAAP,KAAkB,WAAlB,GACEA,qBADF,GAEEC,SANR;AAOD;;AAED,IAAMC,CAAC,GAAGL,SAAS,EAAnB,EAEA;;AACAK,CAAC,CAACpB,MAAF,GAAWA,MAAX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC7CA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;UEPD;UACA;UACA;UACA;UACA","sources":["webpack://@ebi/macos-outlook-addin/./src/commands/commands.ts","webpack://@ebi/macos-outlook-addin/webpack/bootstrap","webpack://@ebi/macos-outlook-addin/webpack/runtime/global","webpack://@ebi/macos-outlook-addin/webpack/before-startup","webpack://@ebi/macos-outlook-addin/webpack/startup","webpack://@ebi/macos-outlook-addin/webpack/after-startup"],"sourcesContent":["/// <reference path=\"../../../../node_modules/@types/office-js/index.d.ts\" />\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n * See LICENSE in the project root for license information.\r\n */\r\n\r\n/* global global, Office, self, window */\r\n\r\nOffice.onReady(() => {\r\n  // If needed, Office.js is ready to be called\r\n});\r\n\r\n/**\r\n * Shows a notification when the add-in command is executed.\r\n * @param event\r\n */\r\nfunction action(event: Office.AddinCommands.Event) {\r\n  const message: Office.NotificationMessageDetails = {\r\n    type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\r\n    message: \"Performed action.\",\r\n    icon: \"Icon.80x80\",\r\n    persistent: true,\r\n  };\r\n\r\n  // Show a notification message\r\n  Office.context.mailbox.item.notificationMessages.replaceAsync(\"action\", message);\r\n\r\n  // Be sure to indicate when the add-in command function is complete\r\n  event.completed();\r\n}\r\n\r\nfunction getGlobal() {\r\n  return typeof self !== \"undefined\"\r\n    ? self\r\n    : typeof window !== \"undefined\"\r\n      ? window\r\n      : typeof global !== \"undefined\"\r\n        ? global\r\n        : undefined;\r\n}\r\n\r\nconst g = getGlobal() as any;\r\n\r\n// The add-in command functions need to be available in global scope\r\ng.action = action;\r\n","// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/commands/commands.ts\"](0, __webpack_exports__, __webpack_require__);\n",""],"names":["Office","onReady","action","event","message","type","MailboxEnums","ItemNotificationMessageType","InformationalMessage","icon","persistent","context","mailbox","item","notificationMessages","replaceAsync","completed","getGlobal","self","window","global","undefined","g"],"sourceRoot":""}